name: Deployment to OrangePi Server

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    concurrency:
      group: "fhir-app-deployment"
      cancel-in-progress: false

    steps:
      - name: Check out the repository code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          set -e
          mkdir -p ~/.ssh
          # Сохранение приватного SSH-ключа из секретов GitHub
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          # Добавление хоста в известные хосты
          ssh-keyscan -H ${{ secrets.ORANGE_PI_IP }} >> ~/.ssh/known_hosts

      - name: Create docker-compose.yml
        run: |
          cat > docker-compose.yml << 'EOF'
          version: '3'
          
          services:
            fhir-app:
              build:
                context: .
                dockerfile: Dockerfile
              container_name: fhir_app
              restart: unless-stopped
              ports:
                - "3000:3000"
              environment:
                - NODE_ENV=production
                - EXTERNAL_FHIR_URL=${EXTERNAL_FHIR_URL}
              volumes:
                - ./.env:/app/backend/.env
          EOF

      - name: Archive and upload code to server
        run: |
          set -e
          # Архивируем проект (исключая .git, .github и другие ненужные файлы)
          tar -czf app.tar.gz \
            --exclude=.git \
            --exclude=.github \
            --exclude=*.log \
            --exclude=node_modules \
            .
          
          # Загружаем архив на удалённый сервер
          scp -i ~/.ssh/id_ed25519 -P ${{ secrets.ORANGE_PI_PORT || '22' }} \
            app.tar.gz \
            ${{ secrets.ORANGE_PI_USER }}@${{ secrets.ORANGE_PI_IP }}:/tmp/app.tar.gz

      - name: Deploy on OrangePi
        run: |
          ssh -i ~/.ssh/id_ed25519 -p ${{ secrets.ORANGE_PI_PORT || '22' }} \
            ${{ secrets.ORANGE_PI_USER }}@${{ secrets.ORANGE_PI_IP }} << 'EOF'
            set -e
          
            # Создаем или обновляем директорию приложения
            mkdir -p ~/fhir-app
          
            # Распаковываем архив
            tar xzf /tmp/app.tar.gz -C ~/fhir-app
          
            # Переходим в директорию приложения
            cd ~/fhir-app
          
            # Создаем .env файл, если его нет
            if [ ! -f .env ]; then
              echo "EXTERNAL_FHIR_URL=${{ secrets.EXTERNAL_FHIR_URL || 'http://localhost:8080/fhir' }}" > .env
            fi
          
            sed -i 's|CMD \["node", "server.js"\]|CMD ["node", "/app/backend/server.js"]|' Dockerfile
          
            docker-compose down || true
          
            docker system prune -f
          
            docker-compose up -d --build
          
            if ! docker ps | grep fhir_app; then
              echo "Container failed to start!"
              docker-compose logs
              exit 1
            else
              echo "Deployment successful!"
            fi
          EOF