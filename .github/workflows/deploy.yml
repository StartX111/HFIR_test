name: Build and Deploy to Orange Pi

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: "deployment"
      cancel-in-progress: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Install frontend dependencies and build
        run: |
          cd frontend
          npm install
          npm run build

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p ${{ secrets.ORANGE_PI_PORT }} -H ${{ secrets.ORANGE_PI_IP }} >> ~/.ssh/known_hosts

      - name: Create deployment archive
        run: |
          tar -czf fhir-app.tar.gz \
            --exclude=.git \
            --exclude=.github \
            --exclude=*.log \
            --exclude=*.tmp \
            --exclude=node_modules \
            --exclude=backend/node_modules \
            --exclude=.idea \
            backend frontend Dockerfile docker-compose.yml

      - name: Upload to server
        run: |
          scp -i ~/.ssh/id_ed25519 -P ${{ secrets.ORANGE_PI_PORT }} \
            fhir-app.tar.gz \
            ${{ secrets.ORANGE_PI_USER }}@${{ secrets.ORANGE_PI_IP }}:/tmp/fhir-app.tar.gz

      - name: Deploy container on server
        run: |
          ssh -i ~/.ssh/id_ed25519 -P ${{ secrets.ORANGE_PI_PORT }} \
            ${{ secrets.ORANGE_PI_USER }}@${{ secrets.ORANGE_PI_IP }} << 'EOF'
            set -e
            
            # Подготовка директории
            rm -rf ~/fhir-app
            mkdir -p ~/fhir-app
            tar xzf /tmp/fhir-app.tar.gz -C ~/fhir-app
            cd ~/fhir-app
            
            # Остановка предыдущих контейнеров
            docker stop fhir_app 2>/dev/null || true
            docker rm fhir_app 2>/dev/null || true
            
            # Сборка и запуск
            if [ -f docker-compose.yml ]; then
              docker-compose down || true
              docker-compose up -d --build
            else
              docker build -t fhir-app:latest .
              docker run -d --name fhir_app \
                -p 80:3000 \
                -e NODE_ENV=production \
                -e EXTERNAL_FHIR_URL='https://server.fire.ly/r4' \
                --restart unless-stopped \
                fhir-app:latest
            fi
            
            # Статус контейнера
            docker ps | grep fhir_app
          EOF
