name: Deploy to OrangePi

on:
  push:
    branches: [ main ] # или master, в зависимости от основной ветки
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create deployment archive
        run: |
          echo ".git" > exclude.txt
          echo "node_modules" >> exclude.txt
          echo ".github" >> exclude.txt
          echo "*.tar.gz" >> exclude.txt
          echo ".idea" >> exclude.txt
          echo "frontend/node_modules" >> exclude.txt
          echo "frontend/dist" >> exclude.txt
          echo "backend/node_modules" >> exclude.txt
          
          tar --warning=no-file-changed --exclude-from=exclude.txt -czf fhir-app.tar.gz .


      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p ${{ secrets.ORANGE_PI_PORT }} ${{ secrets.ORANGE_PI_IP }} >> ~/.ssh/known_hosts

      - name: Transfer archive to server
        run: |
          scp -i ~/.ssh/id_ed25519 -P ${{ secrets.ORANGE_PI_PORT }} \
            fhir-app.tar.gz \
            ${{ secrets.ORANGE_PI_USER }}@${{ secrets.ORANGE_PI_IP }}:/tmp/fhir-app.tar.gz

      - name: Deploy on server
        run: |
          set -e
          set -x
          ssh -i ~/.ssh/id_ed25519 -o ServerAliveInterval=60 -p ${{ secrets.ORANGE_PI_PORT }} \
            ${{ secrets.ORANGE_PI_USER }}@${{ secrets.ORANGE_PI_IP }} << 'EOF'
            set -e

            # Используем уникальный путь для FHIR приложения
            mkdir -p ~/fhir-app

            tar xzf /tmp/fhir-app.tar.gz -C ~/fhir-app
            
            cd ~/fhir-app
            
            docker stop node_app || true
            docker rm node_app || true
            
            docker stop fhir_app || true
            docker rm fhir_app || true
            
            docker build -t fhir-app:latest .
            docker run -d --name fhir_app \
              -p 80:3000 \
              -e NODE_ENV=production \
              -e EXTERNAL_FHIR_URL='https://server.fire.ly/r4' \
              --restart unless-stopped \
              fhir-app:latest
          
            docker ps | grep fhir_app
          EOF
